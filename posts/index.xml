<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Supragya Raj</title><link>https://supragya.github.io/posts/</link><description>Recent content in Posts on Supragya Raj</description><generator>Hugo</generator><language>en</language><managingEditor>supragyaraj+sgh@gmail.com (Supragya Raj)</managingEditor><webMaster>supragyaraj+sgh@gmail.com (Supragya Raj)</webMaster><lastBuildDate>Fri, 26 Jul 2024 14:11:58 +0530</lastBuildDate><atom:link href="https://supragya.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Graph and Trees in rust</title><link>https://supragya.github.io/posts/writing-graph-trees/</link><pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate><author>supragyaraj+sgh@gmail.com (Supragya Raj)</author><guid>https://supragya.github.io/posts/writing-graph-trees/</guid><description>Interviews are hard, and quirks for rust do make them harder. Especially when it comes to data structures like graphs and trees. While in other languages you can quickly code up a pointer based solution due to most languages not having a borrow checker. However, the borrow checker is a bane for writing these data structures in rust, especially in a time constrained setting such as that of a coding interview.</description></item></channel></rss>